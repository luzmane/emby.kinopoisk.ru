{
    "version": "2.0.0",
    "tasks": [
        // clean
        {
            "label": "clean",
            "command": "dotnet",
            "type": "process",
            "args": [
                "clean"
            ],
            "problemMatcher": "$msCompile"
        },
        // build library
        {
            "label": "build library",
            "command": "dotnet",
            "type": "process",
            "args": [
                "build",
                "${workspaceFolder}/EmbyKinopoiskRu/EmbyKinopoiskRu.csproj",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:Summary"
            ],
            "problemMatcher": "$msCompile"
        },
        // build with test
        {
            "label": "build with test",
            "command": "dotnet",
            "type": "process",
            "args": [
                "build",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:Summary"
            ],
            "problemMatcher": "$msCompile",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        // build library release
        {
            "label": "build library release",
            "command": "dotnet",
            "type": "process",
            "args": [
                "build",
                "${workspaceFolder}/EmbyKinopoiskRu/EmbyKinopoiskRu.csproj",
                "/property:Configuration=Release"
            ],
            "problemMatcher": "$msCompile"
        },
        // move plugin
        {
            "label": "move plugin",
            "command": "mv",
            "type": "shell",
            "args": [
                "${workspaceFolder}/EmbyKinopoiskRu/bin/Debug/netstandard2.0/EmbyKinopoiskRu.dll",
                "${workspaceFolder}/../emby/server/emby-data/plugins/"
            ],
            "problemMatcher": {
                "owner": "shell",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}"
                ],
                "pattern": {
                    "regexp": "^mv: cannont stat .* No such file or directory$"
                }
            }
        },
        // start emby
        {
            "label": "start emby",
            "command": "/usr/bin/nohup",
            "type": "process",
            "isBackground": true,
            "options": {
                "env": {
                    "EMBY_DATA": "${workspaceFolder}/../emby/server/emby-data"
                },
                "shell": {
                    "executable": "/bin/bash"
                },
                "cwd": "${workspaceFolder}/../emby/server/emby-server"
            },
            "args": [
                "${workspaceFolder}/../emby/server/emby-server/bin/emby-server"
            ],
            "problemMatcher": [
                {
                    "pattern": [
                        {
                            "regexp": ".",
                            "file": 1,
                            "location": 2,
                            "message": 3
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": ".",
                        "endsPattern": ".",
                    }
                }
            ]
        },
        // build, start server
        {
            "label": "build, start server",
            "dependsOrder": "sequence",
            "dependsOn": [
                "build library",
                "move plugin",
                "start emby"
            ]
        },
        // build, move plugin
        {
            "label": "build, move plugin",
            "dependsOrder": "sequence",
            "dependsOn": [
                "build library",
                "move plugin"
            ]
        },
        // run tests with coverage
        {
            "label": "run tests with coverage",
            "type": "process",
            "command": "dotnet",
            "args": [
                "test",
                "--collect:\"XPlat Code Coverage\""
            ],
            "options": {
                "cwd": "${workspaceFolder}/EmbyKinopoiskRu.Tests",
            },
            "group": "test",
            "presentation": {
                "panel": "new"
            }
        },
        // generate HTML coverage
        {
            "label": "generate HTML coverage",
            "type": "shell",
            "dependsOn": [
                "run tests with coverage"
            ],
            "command": "for i in $(ls); do echo $i; reportgenerator -reports:\"${i}/coverage.cobertura.xml\" -targetdir:\"${i}/coveragereport\" -reporttypes:Html; done",
            "options": {
                "cwd": "${workspaceFolder}/EmbyKinopoiskRu.Tests/TestResults",
            },
            "group": "test",
            "presentation": {
                "panel": "new"
            }
        },
        // tests with report
        {
            "label": "tests with report",
            "dependsOrder": "sequence",
            "dependsOn": [
                "clean",
                "build with test",
                "run tests with coverage",
                "generate HTML coverage"
            ]
        },
        // kill emby server
        {
            "label": "kill emby server",
            "type": "shell",
            "command": "killall",
            "args": [
                "EmbyServer"
            ]
        },
    ]
}
